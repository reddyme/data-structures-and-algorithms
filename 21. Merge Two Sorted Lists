21. Merge Two Sorted Lists

Merge two sorted linked lists and return it as a new sorted list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4


Solutions:

Time Complexity: O(n)  Space Complexity: O(1)

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode p1=l1;
        ListNode p2=l2;
        ListNode head=new ListNode();
        ListNode target=head;
        while(p1!=null && p2!=null){
            if(p1.val<p2.val)
            {
                head.next=p1;
                head=p1;
                p1=p1.next;
            }
            else if(p1.val>p2.val){
                head.next=p2;
                head=p2;
                p2=p2.next;
            }
            else{
                head.next=p1;
                head=p1;
                p1=p1.next;
            }
        }
        
        if(p1!=null){
            head.next=p1;
            head=p1;
        }
            
        if(p2!=null){
            head.next=p2;
            head=p2;
        }
            
        return target.next;
    }
}
