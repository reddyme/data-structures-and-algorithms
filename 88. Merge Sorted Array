88. Merge Sorted Array

Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:

    The number of elements initialized in nums1 and nums2 are m and n respectively.
    You may assume that nums1 has enough space (size that is equal to m + n) to hold additional elements from nums2.

Example:

Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

Output: [1,2,2,3,5,6]

 

Constraints:

    -10^9 <= nums1[i], nums2[i] <= 10^9
    nums1.length == m + n
    nums2.length == n

Solutions:

Time: O(n) Space: O(1)

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int endPointer1=m-1;
        int endPointer2=n-1;
        int fullSize=m+n-1;
        while(endPointer2>=0 && endPointer1>=0){
            if(nums2[endPointer2]>nums1[endPointer1]){
                nums1[fullSize]=nums2[endPointer2];
                endPointer2--;
            }
            else{
                nums1[fullSize]=nums1[endPointer1];
                endPointer1--;
            }
            fullSize--;
        }
        while(endPointer2>=0)
        {
            nums1[fullSize]=nums2[endPointer2];
            endPointer2--;
            fullSize--;
        }

        while(endPointer1>=0)
        {
            nums1[fullSize]=nums1[endPointer1];
            endPointer1--;
            fullSize--;
        }

    }
}
