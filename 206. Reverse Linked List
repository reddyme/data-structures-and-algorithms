206. Reverse Linked List

Reverse a singly linked list.

Example:

Input: 1->2->3->4->5->NULL
Output: 5->4->3->2->1->NULL

Follow up:

A linked list can be reversed either iteratively or recursively. Could you implement both?


Solutions:

Time: O(n)  Space: O(1)

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode nextNode;
        ListNode currentNode;
        ListNode prev=null;
        while(head!=null){
            currentNode=head;
            nextNode=head.next;
            head.next=prev;
            head=nextNode;
            prev=currentNode;
        }
        return prev;
    }
}

