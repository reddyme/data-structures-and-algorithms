20. Valid Parentheses

Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

    Open brackets must be closed by the same type of brackets.
    Open brackets must be closed in the correct order.

Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true

Example 2:

Input: "()[]{}"
Output: true

Example 3:

Input: "(]"
Output: false

Example 4:

Input: "([)]"
Output: false

Example 5:

Input: "{[]}"
Output: true

Solutions:

Time Complexity: O(n) Space Complexity : O(n)

class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack=new Stack<>();
        char[] ch=s.toCharArray();
        for(int i=0;i<ch.length;i++){
            if(ch[i]=='(' || ch[i]=='{' || ch[i]=='[')
                stack.push(ch[i]);
            else
            {
                if(stack.size()==0)
                    return false;
                char topChar=stack.pop();
                if(ch[i]==')' && topChar!='(')
                    return false;
                else if(ch[i]==']' && topChar!='[')
                    return false;
                else if(ch[i]=='}' && topChar!='{')
                    return false;
            }
        }
        return stack.size()!=0?false:true;
    }
}

Time Complexity: O(n) Space Complexity : O(n)

class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack=new Stack<>();
        char[] ch=s.toCharArray();
        HashMap<Character,Character> map=new HashMap<>();
        map.put(')','(');
        map.put(']','[');
        map.put('}','{');
        for(int i=0;i<ch.length;i++){
            if(ch[i]=='(' || ch[i]=='{' || ch[i]=='[')
                stack.push(ch[i]);
            else
            {
                if(stack.size()==0)
                    return false;
                char topChar=stack.pop();
                if(topChar!=map.get(ch[i]))
                    return false;
            }
        }
        return stack.size()!=0?false:true;
    }
}





